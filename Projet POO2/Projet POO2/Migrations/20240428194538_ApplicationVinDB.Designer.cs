// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projet_POO2.Models;

#nullable disable

namespace Projet_POO2.Migrations
{
    [DbContext(typeof(ApplicationVinDbContext))]
    [Migration("20240428194538_ApplicationVinDB")]
    partial class ApplicationVinDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projet_POO2.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Projet_POO2.Models.OEnologue", b =>
                {
                    b.Property<int>("IdOEnologue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOEnologue"));

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOEnologue");

                    b.ToTable("OEnologues");
                });

            modelBuilder.Entity("Projet_POO2.Models.Performance", b =>
                {
                    b.Property<int>("IdPerformance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerformance"));

                    b.Property<float>("TauxReconnaissance")
                        .HasColumnType("real");

                    b.HasKey("IdPerformance");

                    b.ToTable("Performances");
                });

            modelBuilder.Entity("Projet_POO2.Models.ProprietaireVignoble", b =>
                {
                    b.Property<int>("IdProprietaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProprietaire"));

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProprietaire");

                    b.ToTable("ProprietaireVignobles");
                });

            modelBuilder.Entity("Projet_POO2.Models.Qualite", b =>
                {
                    b.Property<int>("IdQualite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQualite"));

                    b.Property<int>("Valeur")
                        .HasColumnType("int");

                    b.HasKey("IdQualite");

                    b.ToTable("Qualites");

                    b.HasData(
                        new
                        {
                            IdQualite = 1,
                            Valeur = 3
                        },
                        new
                        {
                            IdQualite = 2,
                            Valeur = 6
                        },
                        new
                        {
                            IdQualite = 3,
                            Valeur = 9
                        });
                });

            modelBuilder.Entity("Projet_POO2.Models.Terrain", b =>
                {
                    b.Property<int>("_idTerrain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_idTerrain"));

                    b.Property<string>("Emplacement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Surface")
                        .HasColumnType("real");

                    b.Property<bool>("VerifierTerrain")
                        .HasColumnType("bit");

                    b.Property<string>("_emplacement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("_surface")
                        .HasColumnType("real");

                    b.HasKey("_idTerrain");

                    b.ToTable("Terrains");
                });

            modelBuilder.Entity("Projet_POO2.Models.Test", b =>
                {
                    b.Property<int>("IdTest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTest"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Vin_idVin")
                        .HasColumnType("int");

                    b.HasKey("IdTest");

                    b.HasIndex("Vin_idVin");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Projet_POO2.Models.TestVin", b =>
                {
                    b.Property<int>("IdTestVin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTestVin"));

                    b.Property<int>("IdTest")
                        .HasColumnType("int");

                    b.Property<int>("IdVin")
                        .HasColumnType("int");

                    b.HasKey("IdTestVin");

                    b.HasIndex("IdTest");

                    b.HasIndex("IdVin");

                    b.ToTable("TestVins");
                });

            modelBuilder.Entity("Projet_POO2.Models.Utilisateur", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtilisateur"));

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateDeNaissance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtilisateur");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Projet_POO2.Models.Vignoble", b =>
                {
                    b.Property<int>("_idVignoble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_idVignoble"));

                    b.Property<string>("Emplacement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProprietaireVignoble")
                        .HasColumnType("int");

                    b.Property<int>("IdTerrain")
                        .HasColumnType("int");

                    b.Property<int>("IdVignoble")
                        .HasColumnType("int");

                    b.Property<float>("Surface")
                        .HasColumnType("real");

                    b.Property<bool>("VerifierVignoble")
                        .HasColumnType("bit");

                    b.Property<string>("_emplacement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("_idProprietaireVignoble")
                        .HasColumnType("int");

                    b.Property<int>("_idTerrain")
                        .HasColumnType("int");

                    b.Property<int>("_proprietaireVignobleIdProprietaire")
                        .HasColumnType("int");

                    b.Property<float>("_surface")
                        .HasColumnType("real");

                    b.Property<int>("_terrain_idTerrain")
                        .HasColumnType("int");

                    b.HasKey("_idVignoble");

                    b.HasIndex("_proprietaireVignobleIdProprietaire");

                    b.HasIndex("_terrain_idTerrain");

                    b.ToTable("Vignobles");
                });

            modelBuilder.Entity("Projet_POO2.Models.Vin", b =>
                {
                    b.Property<int>("_idVin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_idVin"));

                    b.Property<float>("Alcohol")
                        .HasColumnType("real");

                    b.Property<float>("CitricAcid")
                        .HasColumnType("real");

                    b.Property<int>("IdVin")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qualite")
                        .HasColumnType("int");

                    b.Property<int>("QualityIdQualite")
                        .HasColumnType("int");

                    b.Property<float>("Sulphates")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("VolatileAcidity")
                        .HasColumnType("real");

                    b.HasKey("_idVin");

                    b.HasIndex("QualityIdQualite");

                    b.ToTable("Vins");
                });

            modelBuilder.Entity("Projet_POO2.Models.VinBlanc", b =>
                {
                    b.Property<int>("IdVinBlanc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVinBlanc"));

                    b.Property<double>("Alcohol")
                        .HasColumnType("float");

                    b.Property<double>("CitricAcid")
                        .HasColumnType("float");

                    b.Property<float>("Concentration")
                        .HasColumnType("real");

                    b.Property<float>("IntensitéArômes")
                        .HasColumnType("real");

                    b.Property<int>("QualiteIdQualite")
                        .HasColumnType("int");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<double>("Sulphates")
                        .HasColumnType("float");

                    b.Property<double>("VolatileAcidity")
                        .HasColumnType("float");

                    b.HasKey("IdVinBlanc");

                    b.HasIndex("QualiteIdQualite");

                    b.ToTable("VinBlancs");
                });

            modelBuilder.Entity("Projet_POO2.Models.VinMousseux", b =>
                {
                    b.Property<int>("IdVinMousseux")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVinMousseux"));

                    b.Property<double>("Alcohol")
                        .HasColumnType("float");

                    b.Property<double>("CitricAcid")
                        .HasColumnType("float");

                    b.Property<float>("PressionGazCarbonique")
                        .HasColumnType("real");

                    b.Property<int>("QualiteIdQualite")
                        .HasColumnType("int");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<float>("QuantiteDioxydeDeCarbone")
                        .HasColumnType("real");

                    b.Property<double>("Sulphates")
                        .HasColumnType("float");

                    b.Property<double>("VolatileAcidity")
                        .HasColumnType("float");

                    b.HasKey("IdVinMousseux");

                    b.HasIndex("QualiteIdQualite");

                    b.ToTable("VinMousseuxes");
                });

            modelBuilder.Entity("Projet_POO2.Models.VinRose", b =>
                {
                    b.Property<int>("IdVinRose")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVinRose"));

                    b.Property<double>("Alcohol")
                        .HasColumnType("float");

                    b.Property<string>("Arôme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CitricAcid")
                        .HasColumnType("float");

                    b.Property<int>("QualiteIdQualite")
                        .HasColumnType("int");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<double>("Sulphates")
                        .HasColumnType("float");

                    b.Property<double>("VolatileAcidity")
                        .HasColumnType("float");

                    b.HasKey("IdVinRose");

                    b.HasIndex("QualiteIdQualite");

                    b.ToTable("VinRoses");
                });

            modelBuilder.Entity("Projet_POO2.Models.VinRouge", b =>
                {
                    b.Property<int>("IdVinRouge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVinRouge"));

                    b.Property<double>("Alcohol")
                        .HasColumnType("float");

                    b.Property<double>("CitricAcid")
                        .HasColumnType("float");

                    b.Property<string>("Cépage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QualiteIdQualite")
                        .HasColumnType("int");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<double>("Sulphates")
                        .HasColumnType("float");

                    b.Property<double>("VolatileAcidity")
                        .HasColumnType("float");

                    b.HasKey("IdVinRouge");

                    b.HasIndex("QualiteIdQualite");

                    b.ToTable("VinRouges");
                });

            modelBuilder.Entity("Projet_POO2.Models.Test", b =>
                {
                    b.HasOne("Projet_POO2.Models.Vin", null)
                        .WithMany("Tests")
                        .HasForeignKey("Vin_idVin");
                });

            modelBuilder.Entity("Projet_POO2.Models.TestVin", b =>
                {
                    b.HasOne("Projet_POO2.Models.Test", "Test")
                        .WithMany("TestVins")
                        .HasForeignKey("IdTest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projet_POO2.Models.Vin", "Vin")
                        .WithMany("TestVins")
                        .HasForeignKey("IdVin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");

                    b.Navigation("Vin");
                });

            modelBuilder.Entity("Projet_POO2.Models.Vignoble", b =>
                {
                    b.HasOne("Projet_POO2.Models.ProprietaireVignoble", "_proprietaireVignoble")
                        .WithMany("Vignobles")
                        .HasForeignKey("_proprietaireVignobleIdProprietaire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projet_POO2.Models.Terrain", "_terrain")
                        .WithMany("vignobles")
                        .HasForeignKey("_terrain_idTerrain")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_proprietaireVignoble");

                    b.Navigation("_terrain");
                });

            modelBuilder.Entity("Projet_POO2.Models.Vin", b =>
                {
                    b.HasOne("Projet_POO2.Models.Qualite", "Quality")
                        .WithMany()
                        .HasForeignKey("QualityIdQualite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quality");
                });

            modelBuilder.Entity("Projet_POO2.Models.VinBlanc", b =>
                {
                    b.HasOne("Projet_POO2.Models.Qualite", "Qualite")
                        .WithMany()
                        .HasForeignKey("QualiteIdQualite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Qualite");
                });

            modelBuilder.Entity("Projet_POO2.Models.VinMousseux", b =>
                {
                    b.HasOne("Projet_POO2.Models.Qualite", "Qualite")
                        .WithMany()
                        .HasForeignKey("QualiteIdQualite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Qualite");
                });

            modelBuilder.Entity("Projet_POO2.Models.VinRose", b =>
                {
                    b.HasOne("Projet_POO2.Models.Qualite", "Qualite")
                        .WithMany()
                        .HasForeignKey("QualiteIdQualite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Qualite");
                });

            modelBuilder.Entity("Projet_POO2.Models.VinRouge", b =>
                {
                    b.HasOne("Projet_POO2.Models.Qualite", "Qualite")
                        .WithMany()
                        .HasForeignKey("QualiteIdQualite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Qualite");
                });

            modelBuilder.Entity("Projet_POO2.Models.ProprietaireVignoble", b =>
                {
                    b.Navigation("Vignobles");
                });

            modelBuilder.Entity("Projet_POO2.Models.Terrain", b =>
                {
                    b.Navigation("vignobles");
                });

            modelBuilder.Entity("Projet_POO2.Models.Test", b =>
                {
                    b.Navigation("TestVins");
                });

            modelBuilder.Entity("Projet_POO2.Models.Vin", b =>
                {
                    b.Navigation("TestVins");

                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
